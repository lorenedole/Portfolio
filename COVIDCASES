/*
Covid 19 Data Exploration 
Skills used: Joins, CTE's, Temp Tables, Windows Functions, Aggregate Functions, Creating Views, Converting Data Types
BIGQUERY LINK: https://console.cloud.google.com/bigquery?sq=575016856384:87dc4a73f4834c59915633b0dd9836f2
*/

SELECT Location, date, total_cases, new_cases, total_deaths, population 
FROM `local-iterator-376605.COVID_P1.CovidDeaths` 
where continent is not null
order by 1,2

-- Looking at Total Cases vs Total Deaths
-- Shows likelihood of dying if you contract covid in your country
SELECT Location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 as DeathPercentage
FROM `local-iterator-376605.COVID_P1.CovidDeaths` 
WHERE location = 'United States' and continent is not null
order by 1,2

--Looking at Total Cases vs Population
SELECT Location, date, total_cases, Population, (total_cases/population)*100 as PercentPopulationInfected
FROM `local-iterator-376605.COVID_P1.CovidDeaths` 
WHERE location = 'United States' and continent is not null
order by 1,2

--Looking at Countries with Highest Infection Rate compared to Population
SELECT Location,Population, MAX(total_cases) AS HighestInfectionCount, MAX((total_cases/population))*100 as PercentPopulationInfected
FROM `local-iterator-376605.COVID_P1.CovidDeaths` 
--WHERE location = 'United States'
WHERE continent is not null
Group by Location, Population
order by PercentPopulationInfected desc

-- Showing countries with Highest Death count per Population
SELECT Location, MAX(cast(total_deaths as int)) AS TotalDeathCount
FROM `local-iterator-376605.COVID_P1.CovidDeaths` 
WHERE continent is not null
Group by Location
order by TotalDeathCount desc

-- Showing Highest Death by Continent **This was the correct way
SELECT location, MAX(cast(total_deaths as int)) AS TotalDeathCount
FROM `local-iterator-376605.COVID_P1.CovidDeaths` 
WHERE continent is null
Group by location
order by TotalDeathCount desc

-- Showing continents with the Highest Death Count per Population
SELECT continent, MAX(cast(total_deaths as int)) AS TotalDeathCount
FROM `local-iterator-376605.COVID_P1.CovidDeaths` 
WHERE continent is not null
Group by continent
order by TotalDeathCount desc

--Global Numbers for each day
SELECT date, Sum(new_cases) as total_cases, sum(new_deaths) as total_deaths, sum(New_deaths)/Sum(new_cases)*100 as DeathPercentage
FROM `local-iterator-376605.COVID_P1.CovidDeaths` 
--WHERE location = 'United States' and
WHERE continent is not null
Group by Date
order by 1,2

--Global Numbers in Total
SELECT Sum(new_cases) as total_cases, sum(new_deaths) as total_deaths, sum(New_deaths)/Sum(new_cases)*100 as DeathPercentage
FROM `local-iterator-376605.COVID_P1.CovidDeaths` 
--WHERE location = 'United States' and
WHERE continent is not null
order by 1,2

--Joining Deaths & Vaccinations Tables
Select *
From `local-iterator-376605.COVID_P1.CovidDeaths` dea
Join `local-iterator-376605.COVID_P1.CovidVaccinations` vac 
On dea.location = vac.location
and dea.date = vac.date

--Looking at Total Population vs Vaccinations
Select dea.continent, dea.location, dea.date, population, vac.new_vaccinations, sum(vac.new_vaccinations) OVER (Partition by dea.location Order by dea.location, dea.Date) as RollingPeopleVaccinated, 
From `local-iterator-376605.COVID_P1.CovidDeaths` dea
Join `local-iterator-376605.COVID_P1.CovidVaccinations` vac 
On dea.location = vac.location
and dea.date = vac.date
WHERE dea.continent is not null 
order by 2,3 

--CTE
With PopvsVac
AS 
(
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, sum(vac.new_vaccinations) OVER (Partition by dea.location Order by dea.location, dea.Date) as RollingPeopleVaccinated, 
From `local-iterator-376605.COVID_P1.CovidDeaths` dea
Join `local-iterator-376605.COVID_P1.CovidVaccinations` vac 
On dea.location = vac.location
and dea.date = vac.date
WHERE dea.continent is not null
)
Select *, (RollingPeopleVaccinated/Population)*100
From PopvsVac
Order by 2

--Temp Table
Create Temp Table #PercentPopulationVaccinated
(Continent nvarchar(255), Location nvarchar(255),Date datetime, Population numeric, New_Vaccinations numeric, RollingPeopleVaccinated numeric)

CREATE OR REPLACE TABLE COVID_P1.PercentPopulationVaccinated(Continent STRING, Location STRING,Date DATE, Population FLOAT64, New_Vaccinations FLOAT64, RollingPeopleVaccinated FLOAT64) AS
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, sum(vac.new_vaccinations) OVER (Partition by dea.location Order by dea.location, dea.Date) as RollingPeopleVaccinated, 
From `local-iterator-376605.COVID_P1.CovidDeaths` dea
Join `local-iterator-376605.COVID_P1.CovidVaccinations` vac 
On dea.location = vac.location
and dea.date = vac.date

Select *, (RollingPeopleVaccinated/Population)*100
From COVID_P1.PercentPopulationVaccinated
Order by 2

--Creating View to store data for later visualizations
Create View COVID_P1.PercentPopulationVaccinated as Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, sum(vac.new_vaccinations) OVER (Partition by dea.location Order by dea.location, dea.Date) as RollingPeopleVaccinated, 
From `local-iterator-376605.COVID_P1.CovidDeaths` dea
Join `local-iterator-376605.COVID_P1.CovidVaccinations` vac 
On dea.location = vac.location
and dea.date = vac.date
WHERE dea.continent is not null

Select *
From `local-iterator-376605.COVID_P1.PercentPopulationVaccinated`

